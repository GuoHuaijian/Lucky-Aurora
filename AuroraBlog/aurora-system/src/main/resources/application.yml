server:
  port: 8082

spring:
  #服务名
  application:
    name: aurora-system

  main:
    allow-bean-definition-overriding: true

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/aurora_blog?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: 564559079

  #kafka配置
  kafka:
    #kafka服务器ip和端口号
    bootstrap-servers: 127.0.0.1:9092
    #=============== producer  =======================
    producer:
      #如果该值大于零时，表示启用重试失败的发送次数
      retries: 0
      #每当多个记录被发送到同一分区时，生产者将尝试将记录一起批量处理为更少的请求，默认值为16384(单位字节)
      batch-size: 16384
      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为3355443
      buffer-memory: 33554432
      #key的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #=============== consumer  =======================
    consumer:
      #用于标识此使用者所属的使用者组的唯一字符串
      #group-id: test-consumer-group
      #当Kafka中没有初始偏移量或者服务器上不再存在当前偏移量时该怎么办，默认值为latest，表示自动将偏移重置为最新的偏移量
      #可选的值为latest, earliest, none
      auto-offset-reset: earliest
      #消费者的偏移量将在后台定期提交，默认值为true
      enable-auto-commit: true
      #如果'enable-auto-commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
      auto-commit-interval: 100
      #密钥的反序列化器类，实现类实现了接口org.apache.kafka.common.serialization.Deserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #值的反序列化器类，实现类实现了接口org.apache.kafka.common.serialization.Deserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# JWT配置
#jwt:
#  # 密匙Key
#  secret: JWTSecret,C3Stones
#  # HeaderKey
#  tokenHeader: Authorization
#  # Token前缀
#  tokenPrefix: Bearer
#  # 过期时间，单位秒
#  expiration: 86400
#  # 配置白名单（不需要认证）
#  antMatchers: /login/**,/register/**,/static/**

# Mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      id-type: AUTO
  configuration:
    # 打印sql
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# Dubbo
dubbo:
  #通信规则（通信协议和端口）
  protocol:
    name: dubbo
    #(默认20880,-1为随机端口)
    port: -1
    #序列化方式
  #    serialization: kryo
  #注册中心的地址和协议
  registry:
    address: zookeeper://127.0.0.1:2181
    protocol: zookeeper
  #连接监控中心
  #  monitor:
  #    protocol: registry
  consumer:
    check: false


# 日志配置
logging:
  level:
    com.aurora: debug
    org.springframework: warn
